# React Native Authentication App - README

## Overview

This React Native application provides authentication functionality using Firebase Authentication. Users can register, log in, and view a listing page. The authentication state is managed using Firebase Auth, and user sessions are stored in AsyncStorage.

---

## Features

- **User Authentication**
  - Register a new user
  - Login with email and password
  - Logout functionality
- **Session Persistence**
  - Automatically logs in users if they have an active session
- **Navigation**
  - Navigate between Login, Registration, and Listing screens
- **Data Fetching**
  - Fetches and displays a list of items from an API
  - Implements pagination and pull-to-refresh functionality

---

## Installation

1. Clone the repository:
   ```sh
   git clone https://github.com/Rohitkharwar1/Mobile-Application-Development-Task
   cd <project-directory>
   ```
2. Install dependencies:
   ```sh
   npm install
   ```
3. Set up Firebase:

   - Create a Firebase project
   - Enable Email/Password authentication
   - Create a `firebaseConfig.js` file in `config/` folder with the Firebase credentials:

   ```js
   import { initializeApp } from "firebase/app";
   import { getAuth } from "firebase/auth";

   const firebaseConfig = {
     apiKey: "YOUR_API_KEY",
     authDomain: "YOUR_AUTH_DOMAIN",
     projectId: "YOUR_PROJECT_ID",
     storageBucket: "YOUR_STORAGE_BUCKET",
     messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
     appId: "YOUR_APP_ID",
   };

   const app = initializeApp(firebaseConfig);
   export const auth = getAuth(app);
   ```

4. Run the application:
   ```sh
   npx react-native run-android  # For Android
   npx react-native run-ios      # For iOS
   ```

---

## Folder Structure

```
.
├── config/
│   ├── firebaseConfig.js
├── screens/
│   ├── LoginScreen.js
│   ├── RegisterScreen.js
│   ├── ListingScreen.js
├── App.js
└── package.json
```

---

## Screens

### 1. LoginScreen

- Allows users to sign in using email and password.
- Validates email format and password length.
- Stores user session using AsyncStorage.
- Redirects to the `ListingScreen` upon successful login.

### 2. RegisterScreen

- Allows new users to create an account.
- Validates password match before creating an account.
- Navigates back to the login screen upon successful registration.

### 3. ListingScreen

- Displays a list of items fetched from an API.
- Implements pagination and pull-to-refresh.
- Provides a logout button to end the user session.

---

## API Usage

- Fetches data from an external API using Axios.
- Supports infinite scrolling with pagination.

---

## Dependencies

- `react-native`
- `react-native-async-storage/async-storage`
- `firebase`
- `axios`
- `react-navigation/native`

---
